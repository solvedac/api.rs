/*
 * @solvedac/unofficial-documentation
 *
 * 이 프로젝트는 [solved.ac](https://solved.ac/) API를 문서화하는 커뮤니티 프로젝트입니다.  이 저장소는 원작자의 요청에 따라 언제든 지워질 수 있으며, 현재 API와 일치하지 않을 수도 있는 점 양해 부탁드립니다.   <sup>   solved.ac 서비스는 shiftpsh가 기획·개발·디자인·운영하는 프로젝트로,   이 저장소와는 solved.ac의 API를 문서화해둔 것 이외에는 아무런 관련이 없습니다. </sup>   [GitHub에서 보기](https://github.com/solvedac/unofficial-documentation)   **주의**: (2023/03/08~) CORS 문제로 인해 API는 사이트 내에서 호출할 수 없으므로 별도 도구를 이용해주십시오. ([#51](https://github.com/solvedac/unofficial-documentation/issues/51)) <br> **참고**: 본 저장소를 내려받고, `pnpm dev`를 실행하시면 로컬 개발 서버를 프록시로 삼아 CORS를 무시할 수 있습니다.    ![@solvedac/unofficial-documentation banner](./assets/solvedac-ud-compact.png)
 *
 * The version of the OpenAPI document: 3.2024.03+b1
 * Contact: me@ranolp.dev
 * Generated by: https://openapi-generator.tech
 */

/// Background : 사용자가 획득할 수 있는 배경입니다.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Background {
    /// 배경의 고유 ID입니다.
    #[serde(rename = "backgroundId")]
    pub background_id: String,
    /// 배경 사진으로 가는 하이퍼링크입니다.
    #[serde(rename = "backgroundImageUrl")]
    pub background_image_url: String,
    /// 일러스트 배경 보기가 꺼져있을 때 보여줄 수 있는 대안 배경 사진으로 가는 하이퍼링크입니다. 일러스트를 포함하지 않은 배경이거나, 배경 제작자가 따로 준비하지 않은 경우 `null` 값일 수 있습니다.
    #[serde(rename = "fallbackBackgroundImageUrl", skip_serializing_if = "Option::is_none")]
    pub fallback_background_image_url: Option<String>,
    /// 움직이는 배경이 켜져있을 때 보여줄 수 있는 배경 영상으로 가는 하이퍼링크입니다. 배경 제작자가 따로 준비하지 않은 경우 `null` 값일 수 있습니다.
    #[serde(rename = "backgroundVideoUrl", skip_serializing_if = "Option::is_none")]
    pub background_video_url: Option<String>,
    /// 배경을 획득한 사용자 수입니다.
    #[serde(rename = "unlockedUserCount")]
    pub unlocked_user_count: i32,
    /// 배경의 표시 이름입니다.
    #[serde(rename = "displayName")]
    pub display_name: String,
    /// 배경의 설명입니다.
    #[serde(rename = "displayDescription")]
    pub display_description: String,
    /// 배경을 얻는 조건입니다. 조건이 숨겨진 경우, 해당 값이 내려오지 않습니다.
    #[serde(rename = "conditions", skip_serializing_if = "Option::is_none")]
    pub conditions: Option<String>,
    /// 배경 획득 조건이 숨겨져 있는지 여부입니다.
    #[serde(rename = "hiddenConditions")]
    pub hidden_conditions: bool,
    /// 일러스트 배경인지 여부입니다.
    #[serde(rename = "isIllust")]
    pub is_illust: bool,
    /// 배경 획득 유형 분류입니다.
    #[serde(rename = "backgroundCategory")]
    pub background_category: Box<crate::models::BackgroundCategory>,
    /// solved.ac 회사가 권리를 보유하는지 여부입니다.
    #[serde(rename = "solvedCompanyRights")]
    pub solved_company_rights: bool,
    /// 배경을 작업한 작가 목록입니다. 빈 배열일 수 있습니다.
    #[serde(rename = "authors")]
    pub authors: Vec<crate::models::BackgroundAuthor>,
}

impl Background {
    /// 사용자가 획득할 수 있는 배경입니다.
    pub fn new(background_id: String, background_image_url: String, unlocked_user_count: i32, display_name: String, display_description: String, hidden_conditions: bool, is_illust: bool, background_category: crate::models::BackgroundCategory, solved_company_rights: bool, authors: Vec<crate::models::BackgroundAuthor>) -> Background {
        Background {
            background_id,
            background_image_url,
            fallback_background_image_url: None,
            background_video_url: None,
            unlocked_user_count,
            display_name,
            display_description,
            conditions: None,
            hidden_conditions,
            is_illust,
            background_category: Box::new(background_category),
            solved_company_rights,
            authors,
        }
    }
}


