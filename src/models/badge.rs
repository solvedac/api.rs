/*
 * @solvedac/unofficial-documentation
 *
 * 이 프로젝트는 [solved.ac](https://solved.ac/) API를 문서화하는 커뮤니티 프로젝트입니다. 이 저장소는 원작자의 요청에 따라 언제든 지워질 수 있으며, 현재 API와 일치하지 않을 수도 있는 점 양해 부탁드립니다.  <sup>   solved.ac 서비스는 shiftpsh가 기획·개발·디자인·운영하는 프로젝트로,   이 저장소와는 solved.ac의 API를 문서화해둔 것 이외에는 아무런 관련이 없습니다. </sup>  **주의**: account 하위 루트를 탐색할 경우, 현재 로그인된 solvedacToken이 노출·오용될 수 있으니 주의하십시오.  [GitHub에서 보기](https://github.com/solvedac/unofficial-documentation)  ![@solvedac/unofficial-documentation banner](./assets/solvedac-ud-compact.png) 
 *
 * The version of the OpenAPI document: 3.2021.09+b2
 * Contact: public.ranolp@gmail.com
 * Generated by: https://openapi-generator.tech
 */

/// Badge : 사용자가 사용할 수 있는 뱃지입니다. 



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Badge {
    /// 뱃지의 ID입니다.
    #[serde(rename = "badgeId")]
    pub badge_id: String,
    /// 뱃지 사진으로 가는 하이퍼링크입니다.
    #[serde(rename = "badgeImageUrl")]
    pub badge_image_url: String,
    /// 뱃지의 이름입니다.
    #[serde(rename = "displayName")]
    pub display_name: String,
    /// 뱃지의 설명입니다.
    #[serde(rename = "displayDescription")]
    pub display_description: String,
}

impl Badge {
    /// 사용자가 사용할 수 있는 뱃지입니다. 
    pub fn new(badge_id: String, badge_image_url: String, display_name: String, display_description: String) -> Badge {
        Badge {
            badge_id,
            badge_image_url,
            display_name,
            display_description,
        }
    }
}


