/*
 * @solvedac/unofficial-documentation
 *
 * 이 프로젝트는 [solved.ac](https://solved.ac/) API를 문서화하는 커뮤니티 프로젝트입니다.  이 저장소는 원작자의 요청에 따라 언제든 지워질 수 있으며, 현재 API와 일치하지 않을 수도 있는 점 양해 부탁드립니다.   <sup>   solved.ac 서비스는 shiftpsh가 기획·개발·디자인·운영하는 프로젝트로,   이 저장소와는 solved.ac의 API를 문서화해둔 것 이외에는 아무런 관련이 없습니다. </sup>   [GitHub에서 보기](https://github.com/solvedac/unofficial-documentation)   **주의**: (2023/03/08~) CORS 문제로 인해 API는 사이트 내에서 호출할 수 없으므로 별도 도구를 이용해주십시오. ([#51](https://github.com/solvedac/unofficial-documentation/issues/51)) <br> **참고**: 본 저장소를 내려받고, `pnpm dev`를 실행하시면 로컬 개발 서버를 프록시로 삼아 CORS를 무시할 수 있습니다.    ![@solvedac/unofficial-documentation banner](./assets/solvedac-ud-compact.png)
 *
 * The version of the OpenAPI document: 3.2024.03+b1
 * Contact: me@ranolp.dev
 * Generated by: https://openapi-generator.tech
 */

/// InlineResponse2002Items : 페이지네이션 가능한 쿼리의 응답 결과입니다.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InlineResponse2002Items {
    /// ID입니다.
    #[serde(rename = "organizationId")]
    pub organization_id: i32,
    /// 이름입니다.
    #[serde(rename = "name")]
    pub name: String,
    /// 유형입니다.
    #[serde(rename = "type")]
    pub _type: Box<crate::models::OrganizationType>,
    /// 문제풀이 레이팅입니다.
    #[serde(rename = "rating")]
    pub rating: i32,
    /// 속한 사용자 수입니다.
    #[serde(rename = "userCount")]
    pub user_count: i32,
    /// 난이도 기여 수입니다.
    #[serde(rename = "voteCount")]
    pub vote_count: i32,
    /// 푼 문제 수입니다.
    #[serde(rename = "solvedCount")]
    pub solved_count: i32,
    /// 상징 색입니다.
    #[serde(rename = "color")]
    pub color: Box<String>,
    /// 순위입니다.
    #[serde(rename = "rank")]
    pub rank: i32,
}

impl InlineResponse2002Items {
    /// 페이지네이션 가능한 쿼리의 응답 결과입니다.
    pub fn new(organization_id: i32, name: String, _type: crate::models::OrganizationType, rating: i32, user_count: i32, vote_count: i32, solved_count: i32, color: String, rank: i32) -> InlineResponse2002Items {
        InlineResponse2002Items {
            organization_id,
            name,
            _type: Box::new(_type),
            rating,
            user_count,
            vote_count,
            solved_count,
            color: Box::new(color),
            rank,
        }
    }
}


