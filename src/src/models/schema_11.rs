/*
 * @solvedac/unofficial-documentation
 *
 * 이 프로젝트는 [solved.ac](https://solved.ac/) API를 문서화하는 커뮤니티 프로젝트입니다. 이 저장소는 원작자의 요청에 따라 언제든 지워질 수 있으며, 현재 API와 일치하지 않을 수도 있는 점 양해 부탁드립니다.  <sup>   solved.ac 서비스는 shiftpsh가 기획·개발·디자인·운영하는 프로젝트로,   이 저장소와는 solved.ac의 API를 문서화해둔 것 이외에는 아무런 관련이 없습니다. </sup>  [GitHub에서 보기](https://github.com/solvedac/unofficial-documentation)  ![@solvedac/unofficial-documentation banner](./assets/solvedac-ud-compact.png) 
 *
 * The version of the OpenAPI document: 3.2021.09+b2
 * Contact: public.ranolp@gmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Schema11 {
    /// 조직의 ID입니다.
    #[serde(rename = "organizationId", skip_serializing_if = "Option::is_none")]
    pub organization_id: Option<i64>,
    /// 조직의 이름입니다.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// 조직의 구분입니다.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// 조직의 레이팅입니다.
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<i64>,
    /// 조직에 포함된 사용자의 수입니다.
    #[serde(rename = "userCount", skip_serializing_if = "Option::is_none")]
    pub user_count: Option<i64>,
    /// 조직의 총 난이도 기여 수입니다.
    #[serde(rename = "voteCount", skip_serializing_if = "Option::is_none")]
    pub vote_count: Option<i64>,
    /// 조직의 총 푼 문제 수입니다.
    #[serde(rename = "solvedCount", skip_serializing_if = "Option::is_none")]
    pub solved_count: Option<i64>,
    /// 조직의 색깔입니다.
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
}

impl Schema11 {
    pub fn new() -> Schema11 {
        Schema11 {
            organization_id: None,
            name: None,
            _type: None,
            rating: None,
            user_count: None,
            vote_count: None,
            solved_count: None,
            color: None,
        }
    }
}

/// 조직의 구분입니다.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "community")]
    Community,
    #[serde(rename = "university")]
    University,
    #[serde(rename = "company")]
    Company,
    #[serde(rename = "high_school")]
    HighSchool,
}

