openapi: 3.0.0
info:
  title: '@solvedac/unofficial-documentation'
  version: "3ce78c7"
  description: |-
    이 프로젝트는 [solved.ac](https://solved.ac/) API를 문서화하는 커뮤니티 프로젝트입니다.

    이 저장소는 원작자의 요청에 따라 언제든 지워질 수 있으며, 현재 API와 일치하지 않을 수도 있는 점 양해 부탁드립니다.


    <sup>
      solved.ac 서비스는 shiftpsh가 기획·개발·디자인·운영하는 프로젝트로,
      이 저장소와는 solved.ac의 API를 문서화해둔 것 이외에는 아무런 관련이 없습니다.
    </sup>


    [GitHub에서 보기](https://github.com/solvedac/unofficial-documentation)


    **주의**: (2023/03/08~) CORS 문제로 인해 API는 사이트 내에서 호출할 수 없으므로 별도 도구를 이용해주십시오. ([#51](https://github.com/solvedac/unofficial-documentation/issues/51)) <br>
    **참고**: 본 저장소를 내려받고, `pnpm dev`를 실행하시면 로컬 개발 서버를 프록시로 삼아 CORS를 무시할 수 있습니다. 


    ![@solvedac/unofficial-documentation banner](./assets/solvedac-ud-compact.png)
  contact:
    name: RanolP
    email: me@ranolp.dev
tags:
  - name: account
  - name: background
  - name: badge
  - name: coins
  - name: problem
  - name: ranking
  - name: search
  - name: other
  - name: user
paths:
  /account/redeem:
    post:
      tags:
        - account
      operationId: redeemCode
      summary: 코드 교환하기
      description: |-
        리딤 코드와 배지, 배경 등을 교환합니다.

        **주의**: 로그인이 필요한 API는 사이트 내에서 호출할 수 없으므로 별도 도구를 이용해주십시오.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '401':
          description: '`solvedacToken`이 올바르지 않은 경우입니다.'
        '404':
          description: 리딤 코드가 올바르지 않은 경우입니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: R33D3MC0D3
                  description: 리딤 코드입니다.
              required:
                - code
      security:
        - TokenAuth: []
  /account/update_settings:
    patch:
      tags:
        - account
      operationId: updateAccountSettings
      summary: 계정 설정 변경하기
      description: |-
        계정의 설정을 변경합니다.

        **주의**: 로그인이 필요한 API는 사이트 내에서 호출할 수 없으므로 별도 도구를 이용해주십시오.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '204':
          description: 서버가 반환에 성공한 경우입니다.
        '401':
          description: '`solvedacToken`이 올바르지 않은 경우입니다.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  example: twitterPostOnClassIncrease
                  description: 업데이트할 설정의 이름입니다.
                value:
                  example: true
                  description: 업데이트할 설정의 새로운 값입니다.
      security:
        - TokenAuth: []
  /account/verify_credentials:
    get:
      tags:
        - account
      operationId: verifyAccountCredentials
      summary: 로그인 정보 가져오기
      description: |-
        현재 로그인한 계정 정보를 가져옵니다.

        **주의**: 로그인이 필요한 API는 사이트 내에서 호출할 수 없으므로 별도 도구를 이용해주십시오.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '200':
          description: 리딤 코드가 올바르지 않은 경우입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCredentials.Credential'
        '401':
          description: '`solvedacToken`이 올바르지 않은 경우입니다.'
      security:
        - TokenAuth: []
  /background/show:
    get:
      tags:
        - background
      operationId: getBackground
      summary: 배경 정보 가져오기
      description: 배경 정보를 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: backgroundId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 요청한 배경 ID에 알맞은 배경 정보를 반환합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Background'
  /badge/show:
    get:
      tags:
        - badge
      operationId: getBadge
      summary: 뱃지 정보 가져오기
      description: 뱃지의 정보를 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: badgeId
          in: query
          required: true
          description: 뱃지 ID
          schema:
            type: string
      responses:
        '200':
          description: 요청한 ID에 알맞은 뱃지 데이터를 반환합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badge'
  /coins/exchange_rate:
    get:
      tags:
        - coins
      operationId: getCoinStardustExchangeRate
      summary: 코인 → 별조각 환율 가져오기
      description: 주어진 쿼리에 따라 문제를 검색합니다.
      parameters: []
      responses:
        '200':
          description: 환율을 가져옵니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCoinStardustExchangeRate.ExchangeRate'
  /coins/shop/list:
    get:
      tags:
        - coins
      operationId: getCoinShopProducts
      summary: 코인샵 상품 목록 가져오기
      description: 코인샵에서 팔고 있는 상품 목록을 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '200':
          description: 상품 목록을 가져옵니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoinShopProduct'
  /problem/class:
    get:
      tags:
        - problem
      operationId: getClassesProblemCount
      summary: CLASS별 문제 수 가져오기
      description: CLASS별 문제 수를 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '200':
          description: CLASS별 문제 수
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetClassesProblemCount.ClassEntry'
  /problem/level:
    get:
      tags:
        - problem
      operationId: getProblemsCountGroupByLevel
      summary: 난이도별 문제 수 가져오기
      description: 난이도별 문제 수를 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '200':
          description: 난이도별 문제 수
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetProblemsCountGroupByLevel.LevelEntry'
  /problem/lookup:
    get:
      tags:
        - problem
      operationId: getProblemsByIdList
      summary: 백준 문제 번호 목록으로 문제 가져오기
      description: 요청한 번호 목록 각각의 백준 문제에 해당하는 solved.ac 문제 정보를 목록으로 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: problemIds
          in: query
          required: true
          description: |-
            요청할 백준 문제 번호 목록
            쉼표로 구분해 넣습니다
          schema:
            type: array
            items:
              type: integer
              format: uint64
          style: form
          explode: false
      responses:
        '200':
          description: solved.ac 문제 정보 여러개를 가져옵니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Problem'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
  /problem/show:
    get:
      tags:
        - problem
      operationId: getProblemById
      summary: 백준 문제 번호로 문제 가져오기
      description: 요청한 번호의 백준 문제에 해당하는 solved.ac 문제 정보를 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: problemId
          in: query
          required: true
          description: 요청할 백준 문제 번호
          schema:
            type: integer
            format: uint64
      responses:
        '200':
          description: solved.ac 문제 정보 1개를 가져옵니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /ranking/class:
    get:
      tags:
        - ranking
      operationId: getRankingByClass
      summary: CLASS 순 사용자 랭킹 가져오기
      description: CLASS가 높은 사용자가 먼저 오도록 정렬한 사용자 목록을 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 사용자 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RivalUser'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
      security:
        - TokenAuth: []
  /ranking/contribution:
    get:
      tags:
        - ranking
      operationId: getRankingByContribution
      summary: 기여 순 사용자 랭킹 가져오기
      description: 기여 횟수가 높은 사용자가 먼저 오도록 정렬한 사용자 목록을 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 사용자 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RivalUser'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
      security:
        - TokenAuth: []
  /ranking/organization:
    get:
      tags:
        - ranking
      operationId: getOrganizationRankingByACRating
      summary: 문제풀이 레이팅 순 단체 랭킹 가져오기
      description: 역라이벌인 사용자 중에서 문제풀이 레이팅이 높은 단체가 먼저 오도록 정렬한 목록을 가져옵니다.
      parameters:
        - name: type
          in: query
          required: false
          description: 단체 유형. 지정하지 않을 경우 전체입니다.
          schema:
            $ref: '#/components/schemas/OrganizationType'
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 사용자 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      type: object
                      required:
                        - organizationId
                        - name
                        - type
                        - rating
                        - userCount
                        - voteCount
                        - solvedCount
                        - color
                        - rank
                      properties:
                        organizationId:
                          type: integer
                          format: uint64
                          example: 394
                          description: ID입니다.
                        name:
                          type: string
                          example: KAIST
                          description: 이름입니다.
                        type:
                          allOf:
                            - $ref: '#/components/schemas/OrganizationType'
                          example: university
                          description: 유형입니다.
                        rating:
                          type: integer
                          format: uint32
                          example: 3332
                          description: 문제풀이 레이팅입니다.
                        userCount:
                          type: integer
                          format: uint64
                          example: 627
                          description: 속한 사용자 수입니다.
                        voteCount:
                          type: integer
                          format: uint64
                          example: 29838
                          description: 난이도 기여 수입니다.
                        solvedCount:
                          type: integer
                          format: uint64
                          example: 21708
                          description: 푼 문제 수입니다.
                        color:
                          allOf:
                            - $ref: '#/components/schemas/Color'
                          example: '#000000'
                          description: 상징 색입니다.
                        rank:
                          type: integer
                          format: uint64
                          example: 1
                          description: 순위입니다.
                      description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
  /ranking/reverse_rival:
    get:
      tags:
        - ranking
      operationId: getReverseRivalRankingByACRating
      summary: 문제풀이 레이팅 순 역라이벌 랭킹 가져오기
      description: 역라이벌인 사용자 중에서 문제풀이 레이팅이 높은 사용자가 먼저 오도록 정렬한 목록을 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 사용자 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RivalUser'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
        '401':
          description: '`solvedacToken`이 올바르지 않은 경우입니다.'
      security:
        - TokenAuth: []
  /ranking/rival:
    get:
      tags:
        - ranking
      operationId: getRivalRankingByACRating
      summary: 문제풀이 레이팅 순 라이벌 랭킹 가져오기
      description: 라이벌인 사용자 중에서 문제풀이 레이팅이 높은 사용자가 먼저 오도록 정렬한 목록을 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 사용자 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RivalUser'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
        '401':
          description: '`solvedacToken`이 올바르지 않은 경우입니다.'
      security:
        - TokenAuth: []
  /ranking/streak:
    get:
      tags:
        - ranking
      operationId: getRankingByMaxStreak
      summary: 최장 스트릭 순 사용자 랭킹 가져오기
      description: 치장 스트릭 유지일이 높은 사용자가 먼저 오도록 정렬한 사용자 목록을 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 사용자 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RivalUser'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
      security:
        - TokenAuth: []
  /ranking/tier:
    get:
      tags:
        - ranking
      operationId: getRankingBySolveACRating
      summary: 문제풀이 레이팅 순 사용자 랭킹 가져오기
      description: 문제풀이 레이팅이 높은 사용자가 먼저 오도록 정렬한 사용자 목록을 가져옵니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 사용자 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RivalUser'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
      security:
        - TokenAuth: []
  /search/problem:
    get:
      tags:
        - search
      operationId: searchProblem
      summary: 문제 검색하기
      description: 주어진 쿼리에 따라 문제를 검색합니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: query
          in: query
          required: true
          description: 쿼리 문자열
          schema:
            type: string
        - name: direction
          in: query
          required: true
          description: |-
            검색 결과 정렬 방향

            <details>
            <summary>열거형 값 설명</summary>

            | 값   | 설명                    |
            | :--- | :---------------------- |
            | asc  | 오름차순 (작은 것 먼저) |
            | desc | 내림차순 (큰 것 먼저)   |
            </details>
          schema:
            $ref: '#/components/schemas/SearchProblem.QueryDirection'
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
        - name: sort
          in: query
          required: true
          description: |-
            검색 결과 정렬 기준

            <details>
            <summary>열거형 값 설명</summary>

            | 값          | 설명           |
            | :---------- | :------------- |
            | id          | 백준 문제 번호 |
            | level       | 문제 수준      |
            | title       | 문제 제목      |
            | solved      | 푼 사람 수     |
            | average_try | 평균 시도      |
            | random      | 랜덤           |
            </details>
          schema:
            $ref: '#/components/schemas/SearchProblem.QuerySort'
      responses:
        '200':
          description: 페이지네이션 가능한 문제 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Problem'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
  /search/suggestion:
    get:
      tags:
        - search
      operationId: getSearchAutoCompletions
      summary: 검색 자동완성 구하기
      description: |-
        주어진 쿼리에 따라 검색할 때 도움이 되도록 자동 완성 및 상위 검색 결과를 반환합니다.
        자동 완성 결과는 언어에 의존적입니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: query
          in: query
          required: true
          description: 쿼리 문자열
          schema:
            type: string
      responses:
        '200':
          description: 자동 완성 및 상위 검색 결과를 반환합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchAutoCompletions.Suggestion'
  /search/tag:
    get:
      tags:
        - search
      operationId: searchProblemTag
      summary: 문제 태그 검색하기
      description: 주어진 쿼리에 따라 문제 태그를 검색합니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: query
          in: query
          required: true
          description: 쿼리 문자열
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 문제 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProblemTag'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
  /search/user:
    get:
      tags:
        - search
      operationId: searchUser
      summary: 사용자 검색하기
      description: 주어진 쿼리에 따라 사용자를 검색합니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: query
          in: query
          required: true
          description: 쿼리 문자열
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: 페이지
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: 페이지네이션 가능한 문제 목록을 반환합니다.
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
  /site/stats:
    get:
      tags:
        - other
      operationId: getSiteStatistics
      summary: solved.ac 통계 가져오기
      description: solved.ac 통계를 가져옵니다.
      parameters: []
      responses:
        '200':
          description: solved.ac 사이트 통계 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteStatistics'
  /user/organizations:
    get:
      tags:
        - user
      operationId: getUserOrganizations
      summary: 사용자 핸들로 단체 가져오기
      description: |-
        해당 핸들의 사용자 정보를 가져옵니다.
        만약 요청자가 로그인 중이라면 라이벌 여부도 가져옵니다.
        로그인 중이 아니라면 라이벌 등 로그인해야 알 수 있는 정보는 기본값 처리됩니다.
      parameters:
        - name: handle
          in: query
          required: true
          description: 요청할 사용자명
          schema:
            type: string
      responses:
        '200':
          description: 사용자 정보를 가져옵니다
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
  /user/problem_stats:
    get:
      tags:
        - user
      operationId: getUserProblemStats
      summary: 문제 수준별로 사용자가 푼 문제 수 가져오기
      description: 해당 핸들의 사용자가 푼 문제 수를 문제 수준별로 나누어 가져옵니다.
      parameters:
        - name: handle
          in: query
          required: true
          description: 요청할 사용자명
          schema:
            type: string
      responses:
        '200':
          description: 문제 수준별 푼 문제 수가 담긴 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUserProblemStats.ProblemStat'
  /user/show:
    get:
      tags:
        - user
      operationId: getUserByHandle
      summary: 사용자 핸들로 정보 가져오기
      description: |-
        해당 핸들의 사용자 정보를 가져옵니다.
        만약 요청자가 로그인 중이라면 라이벌 여부도 가져옵니다.
        로그인 중이 아니라면 라이벌 등 로그인해야 알 수 있는 정보는 기본값 처리됩니다.
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: handle
          in: query
          required: true
          description: 요청할 사용자명
          schema:
            type: string
      responses:
        '200':
          description: 사용자 정보를 가져옵니다
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialUser'
      security:
        - TokenAuth: []
  /user/top_100:
    get:
      tags:
        - user
      operationId: getUserTop100
      summary: 상위 100 문제 가져오기
      description: 사용자가 푼 문제 중 문제 수준이 높은 상위 100 문제를 가져옵니다
      parameters:
        - name: x-solvedac-language
          in: header
          required: false
          description: 응답을 받을 언어입니다.
          schema:
            $ref: '#/components/schemas/Language'
        - name: handle
          in: query
          required: true
          description: 요청할 사용자명
          schema:
            type: string
      responses:
        '200':
          description: 상위 100 문제 목록
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                  - items
                properties:
                  count:
                    type: integer
                    format: uint64
                    example: 1
                    description: 전체 원소 수입니다.
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Problem'
                    description: 현재 페이지의 원소 목록입니다.
                description: 페이지네이션 가능한 쿼리의 응답 결과입니다.
components:
  schemas:
    ArenaTier:
      type: number
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
      description: |-
        <solved-icon type="arena-tier:0"></solved-icon> <span class="arena-tier unrated">Unrated</span>를 0,
        <solved-icon type="arena-tier:1"></solved-icon> <span class="arena-tier c">C</span>를 1,
        ...,
        <solved-icon type="arena-tier:12"></solved-icon> <span class="arena-tier sss+">SSS+</span>을 12,
        <solved-icon type="arena-tier:13"></solved-icon> <span class="arena-tier x">X</span>를 13으로 표현하는 아레나 티어입니다.
        자세한 값 정보는 표1. 아레나 레이팅 표를 펼쳐 참고하십시오.

        <details>
        <summary>
        표1. 아레나 레이팅 표
        </summary>

        | 수치 | 이름                                                                                            |                                    요구 레이팅 |
        | ---: | :---------------------------------------------------------------------------------------------- | ---------------------------------------------: |
        |    0 | <solved-icon type="arena-tier:0"></solved-icon> <span class="arena-tier unrated">Unrated</span> | <span class="bold arena-tier unrated">-</span> |
        |    1 |             <solved-icon type="arena-tier:1"></solved-icon> <span class="arena-tier c">C</span> |       <span class="bold arena-tier c">1</span> |
        |    2 |           <solved-icon type="arena-tier:2"></solved-icon> <span class="arena-tier c+">C+</span> |    <span class="bold arena-tier c+">400</span> |
        |    3 |             <solved-icon type="arena-tier:3"></solved-icon> <span class="arena-tier b">B</span> |     <span class="bold arena-tier b">800</span> |
        |    4 |           <solved-icon type="arena-tier:4"></solved-icon> <span class="arena-tier b+">B+</span> |   <span class="bold arena-tier b+">1000</span> |
        |    5 |             <solved-icon type="arena-tier:5"></solved-icon> <span class="arena-tier a">A</span> |    <span class="bold arena-tier a">1200</span> |
        |    6 |           <solved-icon type="arena-tier:6"></solved-icon> <span class="arena-tier a+">A+</span> |   <span class="bold arena-tier a+">1400</span> |
        |    7 |             <solved-icon type="arena-tier:7"></solved-icon> <span class="arena-tier s">S</span> |    <span class="bold arena-tier s">1600</span> |
        |    8 |           <solved-icon type="arena-tier:8"></solved-icon> <span class="arena-tier s+">S+</span> |   <span class="bold arena-tier s+">1800</span> |
        |    9 |           <solved-icon type="arena-tier:9"></solved-icon> <span class="arena-tier ss">SS</span> |   <span class="bold arena-tier ss">2000</span> |
        |   10 |        <solved-icon type="arena-tier:10"></solved-icon> <span class="arena-tier ss+">SS+</span> |  <span class="bold arena-tier ss+">2200</span> |
        |   11 |        <solved-icon type="arena-tier:11"></solved-icon> <span class="arena-tier sss">SSS</span> |  <span class="bold arena-tier sss">2400</span> |
        |   12 |      <solved-icon type="arena-tier:12"></solved-icon> <span class="arena-tier sss+">SSS+</span> | <span class="bold arena-tier sss+">2600</span> |
        |   13 |            <solved-icon type="arena-tier:13"></solved-icon> <span class="arena-tier x">X</span> |    <span class="bold arena-tier x">3000</span> |

        </details>
    Background:
      type: object
      required:
        - backgroundId
        - backgroundImageUrl
        - unlockedUserCount
        - displayName
        - displayDescription
        - hiddenConditions
        - isIllust
        - backgroundCategory
        - solvedCompanyRights
        - authors
      properties:
        backgroundId:
          type: string
          example: boardgame_7
          description: 배경의 고유 ID입니다.
        backgroundImageUrl:
          type: string
          format: uri
          example: https://static.solved.ac/profile_bg/boardgame/chess.png
          description: 배경 사진으로 가는 하이퍼링크입니다.
        fallbackBackgroundImageUrl:
          type: string
          format: uri
          nullable: true
          example: https://static.solved.ac/profile_bg/boardgame/chess_fallback.png
          description: |-
            일러스트 배경 보기가 꺼져있을 때 보여줄 수 있는 대안 배경 사진으로 가는 하이퍼링크입니다.
            일러스트를 포함하지 않은 배경이거나, 배경 제작자가 따로 준비하지 않은 경우 `null` 값일 수 있습니다.
        backgroundVideoUrl:
          type: string
          format: uri
          nullable: true
          example: https://static.solved.ac/profile_bg/boardgame/chess.mp4
          description: |-
            움직이는 배경이 켜져있을 때 보여줄 수 있는 배경 영상으로 가는 하이퍼링크입니다.
            배경 제작자가 따로 준비하지 않은 경우 `null` 값일 수 있습니다.
        unlockedUserCount:
          type: integer
          format: uint64
          example: 105
          description: 배경을 획득한 사용자 수입니다.
        displayName:
          type: string
          example: 분석의 예술
          description: 배경의 표시 이름입니다.
        displayDescription:
          type: string
          example: 나쁜 오프닝 뒤에는 미들게임이라는 희망이 있고, 나쁜 미들게임 뒤에는 엔드게임이라는 희망이 있다. 하지만 엔드게임에 들어갔다면 진실과 마주해야 한다.
          description: 배경의 설명입니다.
        conditions:
          type: string
          nullable: true
          example: 보드게임컵에 출전해 7문제 이상 해결
          description: |-
            배경을 얻는 조건입니다.
            조건이 숨겨진 경우, 해당 값이 내려오지 않습니다.
        hiddenConditions:
          type: boolean
          example: false
          description: 배경 획득 조건이 숨겨져 있는지 여부입니다.
        isIllust:
          type: boolean
          example: true
          description: 일러스트 배경인지 여부입니다.
        backgroundCategory:
          allOf:
            - $ref: '#/components/schemas/BackgroundCategory'
          example: contest
          description: 배경 획득 유형 분류입니다.
        solvedCompanyRights:
          type: boolean
          example: true
          description: solved.ac 회사가 권리를 보유하는지 여부입니다.
        authors:
          type: array
          items:
            $ref: '#/components/schemas/BackgroundAuthor'
          example:
            - authorId: havana723
              role: Illustration
              authorUrl: null
              handle: havana723
              twitter: null
              instagram: null
              displayName: havana723
            - authorId: shiftpsh
              role: Graphic art / Animations
              authorUrl: https://shiftpsh.com
              handle: shiftpsh
              twitter: shiftpsh
              instagram: shiftpsh
              displayName: shiftpsh
          description: 배경을 작업한 작가 목록입니다. 빈 배열일 수 있습니다.
      description: 사용자가 획득할 수 있는 배경입니다.
    BackgroundAuthor:
      type: object
      required:
        - authorId
        - role
        - displayName
      properties:
        authorId:
          type: string
          example: havana723
          description: 작가 고유 ID입니다.
        role:
          type: string
          example: Illustration
          description: 수행한 역할입니다.
        authorUrl:
          type: string
          format: uri
          nullable: true
          example: null
          description: 작가 홈페이지로 가는 하이퍼링크입니다.
        handle:
          type: string
          nullable: true
          example: havana723
          description: 작가의 solved.ac 핸들입니다.
        twitter:
          type: string
          nullable: true
          example: null
          description: 작가의 Twitter ID입니다.
        instagram:
          type: string
          nullable: true
          example: null
          description: 작가의 인스타그램 ID입니다.
        displayName:
          type: string
          example: havana723
          description: 작가의 표시 이름입니다.
      description: 배경을 작업한 작가입니다.
    BackgroundCategory:
      type: string
      enum:
        - event
        - arena
        - achievement
        - season
        - contest
      example: contest
      description: 배경 획득 유형 분류입니다.
    Badge:
      type: object
      required:
        - badgeId
        - badgeImageUrl
        - displayName
        - displayDescription
        - unlockedUserCount
        - badgeTier
        - badgeCategory
        - solvedCompanyRights
        - createdAt
      properties:
        badgeId:
          type: string
          example: anniversary_1st
          description: 뱃지의 고유 ID입니다.
        badgeImageUrl:
          type: string
          format: uri
          example: https://static.solved.ac/profile_badge/anniversary_1st.png
          description: 뱃지 사진으로 가는 하이퍼링크입니다.
        displayName:
          type: string
          example: 1솔브
          description: 뱃지가 표시되는 이름입니다.
        displayDescription:
          type: string
          example: solved.ac의 1주년과 함께했다
          description: 뱃지의 설명입니다.
        unlockedUserCount:
          type: integer
          format: uint64
          example: 5000
          description: 뱃지를 획득한 사용자 수입니다.
        badgeTier:
          allOf:
            - $ref: '#/components/schemas/BadgeTier'
          example: gold
        badgeCategory:
          allOf:
            - $ref: '#/components/schemas/BadgeCategory'
          example: season
        solvedCompanyRights:
          type: boolean
          example: true
          description: solved.ac 회사가 권리를 보유하는지 여부입니다.
        createdAt:
          type: string
          format: date-time
          example: 2021-06-05T15:00:00.000Z
          description: 뱃지가 만들어진 시각입니다.
      description: 사용자가 획득할 수 있는 뱃지입니다.
    BadgeCategory:
      type: string
      enum:
        - achievement
        - season
        - event
        - contest
      example: season
      description: 뱃지 획득 유형 분류입니다.
    BadgeTier:
      type: string
      enum:
        - bronze
        - silver
        - gold
        - master
      example: bronze
      description: 뱃지의 등급입니다.
    CoinShopProduct:
      type: object
      required:
        - skuId
        - item
        - units
        - price
        - priceUnit
        - itemUseTimeLimited
        - itemSellTimeLimited
      properties:
        skuId:
          type: integer
          format: uint32
          example: 1
          description: 재고(Stock Keeping Unit) ID입니다.
        item:
          $ref: '#/components/schemas/Item'
        units:
          type: integer
          format: uint32
          example: 1
          description: 1회 구매 시 획득하는 아이템 개수입니다.
        price:
          type: integer
          format: uint32
          example: 99
          description: |-
            가격입니다.
            코인의 경우 나누기 100을 해야 표시 가격이 됩니다.
        priceUnit:
          type: string
          enum:
            - coins
            - stardusts
          example: coins
          description: 가격 단위입니다.
        itemUseTimeLimited:
          type: boolean
          example: false
          description: 아이템 사용 시간 제한 여부입니다.
        itemSellTimeLimited:
          type: boolean
          example: false
          description: 아이템 구매 기간 제한 여부입니다.
      description: 코인샵에서 판매하고 있는 상품입니다.
    Color:
      type: string
    Emoticon:
      type: object
      required:
        - emoticonId
        - emoticonUrl
        - displayName
      properties:
        emoticonId:
          type: string
          example: hanbyeol-01
          description: 고유 식별자입니다.
        emoticonUrl:
          type: string
          format: uri
          example: https://static.solved.ac/emoticons/fool.png
          description: 사진으로 가는 하이퍼링크입니다.
        displayName:
          type: string
          example: 난 바보야
          description: 한국어 이름입니다.
      description: 난이도 투표 등에 사용할 수 있는 이모티콘입니다.
    GetClassesProblemCount.ClassEntry:
      type: object
      required:
        - class
        - total
        - essentials
        - criteria
      properties:
        class:
          type: number
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
          description: 클래스 숫자입니다.
        total:
          type: integer
          format: uint32
          description: 총 문제 수입니다.
        essentials:
          type: integer
          format: uint32
          description: 에센셜 문제 수입니다.
        criteria:
          type: integer
          format: uint32
          description: 취득에 필요한 문제 수입니다.
      x-internal: true
    GetCoinStardustExchangeRate.ExchangeRate:
      type: object
      required:
        - rate
      properties:
        rate:
          type: integer
          format: uint64
          example: 1498
          description: |-
            1 코인을 별조각으로 바꾸는 환율입니다.
            별조각을 코인으로 환전할 때에는 수수료가 1%(소수점은 내림) 붙습니다.
      x-internal: true
    GetProblemsCountGroupByLevel.LevelEntry:
      type: object
      required:
        - level
        - count
      properties:
        level:
          $ref: '#/components/schemas/ProblemLevel'
        count:
          type: integer
          format: uint64
          description: 문제 수입니다.
      x-internal: true
    GetSearchAutoCompletions.AutoCompleteEntry:
      type: object
      required:
        - caption
        - description
      properties:
        caption:
          type: string
          description: |-
            자동 완성 제목입니다.
            만약 href이 없을 경우 누르면 해당 값으로 자동 완성합니다.
        description:
          type: string
          description: 자동 완성 요소의 설명입니다.
      example:
        caption: s#
        description: 푼 사람 수
      description: 고급 검색 관련 자동 완성입니다.
      x-internal: true
    GetSearchAutoCompletions.BriefProblemEntry:
      type: object
      required:
        - id
        - title
        - level
        - solved
        - caption
        - description
      properties:
        id:
          type: integer
          format: uint64
          example: 1763
          description: 문제 ID입니다.
        title:
          type: string
          example: 트리 색칠
          description: 문제 제목입니다.
        level:
          allOf:
            - $ref: '#/components/schemas/ProblemLevel'
          example: 24
        solved:
          type: integer
          format: uint64
          example: 160
          description: 푼 사람 수입니다.
        caption:
          type: string
          description: |-
            자동 완성 제목입니다.
            만약 href이 없을 경우 누르면 해당 값으로 자동 완성합니다.
        description:
          type: string
          description: 자동 완성 요소의 설명입니다.
      example:
        id: 1014
        title: 컨닝
        level: 17
        solved: 2143
        caption: 컨닝
        description: '#1014'
        href: https://www.acmicpc.net/problem/1014
      description: 요악한 문제 정보입니다.
      x-internal: true
    GetSearchAutoCompletions.BriefProblemTagEntry:
      type: object
      required:
        - key
        - name
        - problemCount
        - caption
        - description
      properties:
        key:
          type: string
          example: math
          description: solved.ac에서 쓰는 태그 ID입니다.
        name:
          type: string
          example: mathematics
          description: |-
            태그 이름입니다.
            사용자 언어에 따라 번역되지 않습니다.
        problemCount:
          type: integer
          format: uint64
          example: 6078
          description: 태그가 붙은 문제 수입니다.
        caption:
          type: string
          description: |-
            자동 완성 제목입니다.
            만약 href이 없을 경우 누르면 해당 값으로 자동 완성합니다.
        description:
          type: string
          description: 자동 완성 요소의 설명입니다.
      example:
        key: math
        name: 수학
        problemCount: 6078
        caption: tag:math
        description: 6078문제
        href: /problems/tags/math
      description: 요약한 태그 정보입니다.
      x-internal: true
    GetSearchAutoCompletions.Suggestion:
      type: object
      required:
        - autocomplete
        - problems
        - problemCount
        - tags
        - tagCount
        - users
        - userCount
      properties:
        autocomplete:
          type: array
          items:
            $ref: '#/components/schemas/GetSearchAutoCompletions.AutoCompleteEntry'
        problems:
          type: array
          items:
            $ref: '#/components/schemas/GetSearchAutoCompletions.BriefProblemEntry'
        problemCount:
          type: integer
          format: uint64
          example: 12548
          description: 검색 결과로 나올 총 문제 수입니다
        tags:
          type: array
          items:
            $ref: '#/components/schemas/GetSearchAutoCompletions.BriefProblemTagEntry'
        tagCount:
          type: integer
          format: uint64
          example: 134
          description: 검색 결과로 나올 총 태그 수입니다.
        users:
          type: array
          items:
            $ref: '#/components/schemas/GetSearchAutoCompletions.UserEntry'
        userCount:
          type: integer
          format: uint64
          example: 15015
          description: 검색 결과로 나올 총 사용자 수입니다.
      x-internal: true
    GetSearchAutoCompletions.UserEntry:
      type: object
      required:
        - handle
        - bio
        - backgroundId
        - solvedCount
        - voteCount
        - class
        - classDecoration
        - rivalCount
        - reverseRivalCount
        - tier
        - rating
        - ratingByProblemsSum
        - ratingByClass
        - ratingBySolvedCount
        - ratingByVoteCount
        - arenaTier
        - arenaRating
        - arenaMaxTier
        - arenaMaxRating
        - arenaCompetedRoundCount
        - maxStreak
        - coins
        - stardusts
        - joinedAt
        - bannedUntil
        - proUntil
        - rank
      properties:
        handle:
          type: string
          example: shiftpsh
          description: 사용자명입니다.
        bio:
          type: string
          example: 🧡 이곳의 개발자입니다.
          description: 자기소개입니다.
        badgeId:
          type: string
          nullable: true
          example: ghudegy2022-1
          description: 장착 중인 뱃지 ID입니다.
        backgroundId:
          type: string
          example: event240203
          description: 장착 중인 배경 ID입니다.
        profileImageUrl:
          type: string
          format: uri
          nullable: true
          example: https://static.solved.ac/uploads/profile/shiftpsh-picture-1693244003120.png
          description: 프로필 사진으로 가는 하이퍼링크입니다.
        solvedCount:
          type: integer
          format: uint64
          example: 3474
          description: 푼 문제 수입니다.
        voteCount:
          type: integer
          format: uint64
          example: 1528
          description: 난이도 기여 수입니다.
        class:
          type: number
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
          example: 8
          description: |-
            취득한 CLASS입니다.
            취득한 CLASS가 없다면 0으로 표현합니다.
        classDecoration:
          type: string
          enum:
            - none
            - silver
            - gold
          example: none
          description: |-
            CLASS 완성도에 따른 장식입니다.
            <solved-icon type="class:1"></solved-icon> 장식 없음 (`"none"`),
            <solved-icon type="class:1s"></solved-icon> 은장<sup>+</sup> (`"silver"`),
            <solved-icon type="class:1g"></solved-icon> 금장<sup>++</sup> (`"gold"`)이 있습니다.
        rivalCount:
          type: integer
          format: uint64
          example: 57
          description: 라이벌 수입니다.
        reverseRivalCount:
          type: integer
          format: uint64
          example: 139
          description: 역라이벌 수입니다.
        tier:
          allOf:
            - $ref: '#/components/schemas/SolveTier'
          example: 26
        rating:
          type: integer
          format: uint32
          example: 2724
          description: 문제풀이 레이팅입니다
        ratingByProblemsSum:
          type: integer
          format: uint32
          example: 2294
          description: 상위 100 문제 난이도 합으로 얻은 레이팅입니다.
        ratingByClass:
          type: integer
          format: uint32
          example: 230
          description: 취득한 CLASS에 따라 얻은 레이팅입니다.
        ratingBySolvedCount:
          type: integer
          format: uint32
          example: 175
          description: 푼 문제 수로 얻은 레이팅입니다.
        ratingByVoteCount:
          type: integer
          format: uint32
          example: 25
          description: 문제 난이도에 기여한 횟수로 받은 레이팅입니다.
        arenaTier:
          allOf:
            - $ref: '#/components/schemas/ArenaTier'
          example: 0
          description: 현재 아레나 티어입니다.
        arenaRating:
          type: integer
          format: uint32
          example: 0
          description: 현재 아레나 레이팅입니다.
        arenaMaxTier:
          allOf:
            - $ref: '#/components/schemas/ArenaTier'
          example: 0
          description: 역대 받은 아레나 티어 중 최고점일 때의 아레나 티어입니다.
        arenaMaxRating:
          type: integer
          format: uint32
          example: 0
          description: 역대 받은 아레나 레이팅 중 최고점일 때의 아레나 레이팅입니다.
        arenaCompetedRoundCount:
          type: integer
          format: uint64
          example: 0
          description: 참여한 아레나 라운드 수입니다.
        maxStreak:
          type: integer
          format: uint64
          example: 366
          description: 유지한 최대 스트릭의 길이입니다. (일 단위)
        coins:
          type: integer
          format: uint64
          example: 1063
          description: |-
            보유 중인 코인에 100을 곱한 값입니다.
            만약, 실제로 보유한 코인이 0.15라면 15로 기록됩니다.
        stardusts:
          type: integer
          format: uint64
          example: 273583
          description: 보유 중인 별가루 양입니다.
        joinedAt:
          type: string
          format: date-time
          example: 2021-06-19T00:00:00.000Z
          description: |-
            가입 시각입니다.
            일부 계정에 대해 2021년 6월 19일 0시 (UTC)로 백필된 흔적이 있습니다.
        bannedUntil:
          type: string
          format: date-time
          example: 1970-01-01T00:00:00.000Z
          description: |-
            정지 종료 시각입니다.
            정지 이력이 없을 경우 Unix Timestamp 0 값을 포매팅한 문자열입니다.
        proUntil:
          type: string
          format: date-time
          example: 2099-12-31T14:59:59.000Z
          description: |-
            [솔브드 서포터](https://solved.ac/support) 종료 시각입니다.
            활성화 이력이 없을 경우 Unix Timestamp 0 값을 포매팅한 문자열입니다.
        rank:
          type: integer
          format: uint64
          example: 130
          description: |-
            순위입니다.
            이 값은 요청하는 엔드포인트의 정렬 기준에 따라 다를 수 있습니다.
            예) /ranking/* 엔드포인트에서는 해당 랭킹의 순위, /show 엔드포인트에서는 문제풀이 레이팅 순위
      description: 사용자 정보입니다.
      x-internal: true
    GetUserProblemStats.ProblemStat:
      type: object
      required:
        - level
        - total
        - solved
        - partial
        - tried
      properties:
        level:
          $ref: '#/components/schemas/ProblemLevel'
        total:
          type: integer
          format: uint64
          example: 0
          description: solved.ac에 등록된 해당 수준 문제 수입니다.
        solved:
          type: integer
          format: uint64
          description: 사용자가 푼 문제 수입니다.
        partial:
          type: integer
          format: uint64
          description: 사용자가 부분 성공한 문제 수입니다.
        tried:
          type: integer
          format: uint64
          description: 사용자가 시도해 본 문제 수입니다.
      x-internal: true
    Item:
      type: object
      required:
        - itemId
        - itemImageUrl
        - inventoryMaxUnits
        - usable
        - displayName
        - displayDescription
      properties:
        itemId:
          type: string
          example: streak-freeze
          description: ID입니다.
        itemImageUrl:
          type: string
          format: uri
          example: https://static.solved.ac/item/freeze-small-simple.svg
          description: 아이템 사진으로 가는 하이퍼링크입니다.
        inventoryMaxUnits:
          type: integer
          format: uint32
          example: 2
          description: |-
            최대 소유 가능 개수입니다.
            사람에 따라 다를 수 있습니다.
        usable:
          type: boolean
          example: true
          description: 사용 가능 여부입니다.
        displayName:
          type: string
          example: 스트릭 프리즈
          description: 국제화된 이름입니다.
        displayDescription:
          type: string
          example: |-
            미리 장착해 두면 어제 문제 푸는 걸 잊었더라도 스트릭이 깨지지 않습니다. 단, 스트릭 길이가 늘어나지는 않습니다.
            인벤토리에서 장착해서 사용할 수 있습니다.
          description: 국제화된 설명입니다.
      description: 사용자가 사용할 수 있는 아이템입니다.
    Language:
      type: string
      enum:
        - ko
        - en
        - ja
      description: solved.ac에서 지원하는 사용자 언어입니다
    Organization:
      type: object
      required:
        - organizationId
        - name
        - type
        - rating
        - userCount
        - voteCount
        - solvedCount
        - color
      properties:
        organizationId:
          type: integer
          format: uint64
          example: 394
          description: ID입니다.
        name:
          type: string
          example: KAIST
          description: 이름입니다.
        type:
          allOf:
            - $ref: '#/components/schemas/OrganizationType'
          example: university
          description: 유형입니다.
        rating:
          type: integer
          format: uint32
          example: 3332
          description: 문제풀이 레이팅입니다.
        userCount:
          type: integer
          format: uint64
          example: 627
          description: 속한 사용자 수입니다.
        voteCount:
          type: integer
          format: uint64
          example: 29838
          description: 난이도 기여 수입니다.
        solvedCount:
          type: integer
          format: uint64
          example: 21708
          description: 푼 문제 수입니다.
        color:
          allOf:
            - $ref: '#/components/schemas/Color'
          example: '#000000'
          description: 상징 색입니다.
      description: solved.ac에 등록한 단체입니다.
    OrganizationType:
      type: string
      enum:
        - university
        - company
        - community
        - high_school
        - middle_school
        - elementary_school
        - undefined
      description: 단체 유형입니다.
    Problem:
      type: object
      required:
        - problemId
        - titleKo
        - titles
        - isSolvable
        - isPartial
        - acceptedUserCount
        - level
        - votedUserCount
        - sprout
        - givesNoRating
        - isLevelLocked
        - averageTries
        - official
        - tags
        - metadata
      properties:
        problemId:
          type: integer
          format: uint64
          example: 13705
          description: 백준 문제 번호로, 문제마다 고유합니다.
        titleKo:
          type: string
          example: Ax+Bsin(x)=C
          description: |-
            한국어 문제 제목입니다.
            HTML 엔티티나 LaTeX 수식을 포함할 수 있습니다.
        titles:
          type: array
          items:
            $ref: '#/components/schemas/ProblemTitleTranslated'
          example:
            - language: ko
              languageDisplayName: ko
              title: Ax+Bsin(x)=C
              isOriginal: true
          description: 언어별 문제 제목 목록입니다.
        isSolvable:
          type: boolean
          example: true
          description: 채점 가능 여부입니다.
        isPartial:
          type: boolean
          example: false
          description: 부분 점수/서브태스크 문제 여부입니다.
        acceptedUserCount:
          type: integer
          format: uint64
          example: 560
          description: 맞은 사람 수입니다.
        level:
          $ref: '#/components/schemas/ProblemLevel'
        votedUserCount:
          type: integer
          format: uint64
          example: 163
          description: 난이도 기여자 수입니다.
        sprout:
          type: boolean
          example: false
          description: 새싹 문제 여부입니다.
        givesNoRating:
          type: boolean
          example: false
          description: 레이팅을 주지 않는지 여부입니다.
        isLevelLocked:
          type: boolean
          example: false
          description: 난이도 기여 제한 여부입니다.
        averageTries:
          type: number
          format: double
          example: 24.5393
          description: 평균 시도 횟수입니다.
        official:
          type: boolean
          example: true
          description: |-
            공식 문제 여부입니다.
            번외 문제 등은 비공식 문제로 분류됩니다.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ProblemTag'
          example:
            - key: arbitrary_precision
              isMeta: false
              bojTagId: 117
              problemCount: 241
              displayNames:
                - language: ko
                  name: 임의 정밀도 / 큰 수 연산
                  short: 임의 정밀도 / 큰 수 연산
                - language: en
                  name: arbitrary precision / big integers
                  short: arbitrary precision / big integers
                - language: ja
                  name: 高精度または大きな数の演算
                  short: 高精度または大きな数の演算
              aliases:
                - alias: 빅인티저
                - alias: 빅데시멀
                - alias: biginteger
                - alias: bigdecimal
            - key: binary_search
              isMeta: false
              bojTagId: 12
              problemCount: 1137
              displayNames:
                - language: ko
                  name: 이분 탐색
                  short: 이분 탐색
                - language: en
                  name: binary search
                  short: binary search
                - language: ja
                  name: 二分探索
                  short: 二分探索
              aliases:
                - alias: 이분탐색
                - alias: 이진탐색
            - key: math
              isMeta: false
              bojTagId: 124
              problemCount: 6007
              displayNames:
                - language: ko
                  name: 수학
                  short: 수학
                - language: en
                  name: mathematics
                  short: math
                - language: ja
                  name: 数学
                  short: 数学
              aliases: []
            - key: numerical_analysis
              isMeta: false
              bojTagId: 122
              problemCount: 17
              displayNames:
                - language: ko
                  name: 수치해석
                  short: 수치해석
                - language: en
                  name: numerical analysis
                  short: numerical analysis
                - language: ja
                  name: 数値解析
                  short: 数値解析
              aliases:
                - alias: 수학
          description: 태그 목록입니다.
        metadata: {}
      description: 문제 정보입니다.
    ProblemLevel:
      type: number
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
      description: |-
        <solved-icon type="solve-tier:0"></solved-icon> <span class="solve-tier zero">Unrated</span> / <solved-icon type="solve-tier:nr"></solved-icon> <span class="solve-tier zero">Not Ratable</span>를 0,
        <solved-icon type="solve-tier:1"></solved-icon> <span class="solve-tier bronze5">Bronze V</span>를 1,
        <solved-icon type="solve-tier:2"></solved-icon> <span class="solve-tier bronze4">Bronze IV</span>를 2,
        ...,
        <solved-icon type="solve-tier:29"></solved-icon> <span class="solve-tier ruby2">Ruby II</span>을 29,
        <solved-icon type="solve-tier:30"></solved-icon> <span class="solve-tier ruby1">Ruby I</span>를 30으로 표현하는 문제 난이도입니다.
        자세한 값 정보는 표1. 문제 난이도 표를 펼쳐 참고하십시오.

        <details>
        <summary>
        표1. 문제 난이도 표
        </summary>

        | 수치 | 이름                                                                                                                                                                                             |
        | ---: | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        |    0 | <solved-icon type="solve-tier:0"></solved-icon> <span class="solve-tier zero">Unrated</span> / <solved-icon type="solve-tier:nr"></solved-icon> <span class="solve-tier zero">Not Ratable</span> |
        |    1 |                                                                                                 <solved-icon type="solve-tier:1"></solved-icon> <span class="solve-tier bronze5">Bronze V</span> |
        |    2 |                                                                                                <solved-icon type="solve-tier:2"></solved-icon> <span class="solve-tier bronze4">Bronze IV</span> |
        |    3 |                                                                                               <solved-icon type="solve-tier:3"></solved-icon> <span class="solve-tier bronze3">Bronze III</span> |
        |    4 |                                                                                                <solved-icon type="solve-tier:4"></solved-icon> <span class="solve-tier bronze2">Bronze II</span> |
        |    5 |                                                                                                 <solved-icon type="solve-tier:5"></solved-icon> <span class="solve-tier bronze1">Bronze I</span> |
        |    6 |                                                                                                 <solved-icon type="solve-tier:6"></solved-icon> <span class="solve-tier silver5">Silver V</span> |
        |    7 |                                                                                                <solved-icon type="solve-tier:7"></solved-icon> <span class="solve-tier silver4">Silver IV</span> |
        |    8 |                                                                                               <solved-icon type="solve-tier:8"></solved-icon> <span class="solve-tier silver3">Silver III</span> |
        |    9 |                                                                                                <solved-icon type="solve-tier:9"></solved-icon> <span class="solve-tier silver2">Silver II</span> |
        |   10 |                                                                                                <solved-icon type="solve-tier:10"></solved-icon> <span class="solve-tier silver1">Silver I</span> |
        |   11 |                                                                                                    <solved-icon type="solve-tier:11"></solved-icon> <span class="solve-tier gold5">Gold V</span> |
        |   12 |                                                                                                   <solved-icon type="solve-tier:12"></solved-icon> <span class="solve-tier gold4">Gold IV</span> |
        |   13 |                                                                                                  <solved-icon type="solve-tier:13"></solved-icon> <span class="solve-tier gold3">Gold III</span> |
        |   14 |                                                                                                   <solved-icon type="solve-tier:14"></solved-icon> <span class="solve-tier gold2">Gold II</span> |
        |   15 |                                                                                                    <solved-icon type="solve-tier:15"></solved-icon> <span class="solve-tier gold1">Gold I</span> |
        |   16 |                                                                                            <solved-icon type="solve-tier:16"></solved-icon> <span class="solve-tier platinum5">Platinum V</span> |
        |   17 |                                                                                           <solved-icon type="solve-tier:17"></solved-icon> <span class="solve-tier platinum4">Platinum IV</span> |
        |   18 |                                                                                          <solved-icon type="solve-tier:18"></solved-icon> <span class="solve-tier platinum3">Platinum III</span> |
        |   19 |                                                                                           <solved-icon type="solve-tier:19"></solved-icon> <span class="solve-tier platinum2">Platinum II</span> |
        |   20 |                                                                                            <solved-icon type="solve-tier:20"></solved-icon> <span class="solve-tier platinum1">Platinum I</span> |
        |   21 |                                                                                              <solved-icon type="solve-tier:21"></solved-icon> <span class="solve-tier diamond5">Diamond V</span> |
        |   22 |                                                                                             <solved-icon type="solve-tier:22"></solved-icon> <span class="solve-tier diamond4">Diamond IV</span> |
        |   23 |                                                                                            <solved-icon type="solve-tier:23"></solved-icon> <span class="solve-tier diamond3">Diamond III</span> |
        |   24 |                                                                                             <solved-icon type="solve-tier:24"></solved-icon> <span class="solve-tier diamond2">Diamond II</span> |
        |   25 |                                                                                              <solved-icon type="solve-tier:25"></solved-icon> <span class="solve-tier diamond1">Diamond I</span> |
        |   26 |                                                                                                    <solved-icon type="solve-tier:26"></solved-icon> <span class="solve-tier ruby5">Ruby V</span> |
        |   27 |                                                                                                   <solved-icon type="solve-tier:27"></solved-icon> <span class="solve-tier ruby4">Ruby IV</span> |
        |   28 |                                                                                                  <solved-icon type="solve-tier:28"></solved-icon> <span class="solve-tier ruby3">Ruby III</span> |
        |   29 |                                                                                                   <solved-icon type="solve-tier:29"></solved-icon> <span class="solve-tier ruby2">Ruby II</span> |
        |   30 |                                                                                                    <solved-icon type="solve-tier:30"></solved-icon> <span class="solve-tier ruby1">Ruby I</span> |

        </details>
    ProblemTag:
      type: object
      required:
        - key
        - isMeta
        - bojTagId
        - problemCount
        - displayNames
        - aliases
      properties:
        key:
          type: string
          example: arbitrary_precision
          description: solved.ac에서 쓰는 태그 ID입니다.
        isMeta:
          type: boolean
          example: false
        bojTagId:
          type: integer
          format: uint64
          example: 117
          description: 백준 온라인 저지에서 쓰는 태그 ID입니다.
        problemCount:
          type: integer
          format: uint64
          example: 241
          description: 태그가 붙은 문제 수입니다.
        displayNames:
          type: array
          items:
            $ref: '#/components/schemas/ProblemTagNameTranslated'
          description: 언어별 태그 이름 목록입니다.
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/ProblemTagAlias'
          description: 별명 목록입니다. 빈 배열일 수 있습니다.
    ProblemTagAlias:
      type: object
      required:
        - alias
      properties:
        alias:
          type: string
          description: 별칭입니다
      description: 태그의 별칭을 나타냅니다.
    ProblemTagNameTranslated:
      type: object
      required:
        - language
        - name
        - short
      properties:
        language:
          allOf:
            - $ref: '#/components/schemas/Language'
          example: ko
          description: 태그 이름이 작성된 언어입니다.
        name:
          type: string
          example: 임의 정밀도 / 큰 수 연산
          description: 이름입니다.
        short:
          type: string
          example: 임의 정밀도 / 큰 수 연산
          description: |-
            짧은 이름입니다.
            따로 없을 경우 `name`과 같은 값입니다.
    ProblemTitleTranslated:
      type: object
      required:
        - language
        - languageDisplayName
        - title
        - isOriginal
      properties:
        language:
          allOf:
            - $ref: '#/components/schemas/Language'
          example: ko
          description: 문제 제목이 작성된 언어입니다.
        languageDisplayName:
          type: string
          example: ko
          description: 문제 제목이 작성된 언어의 이름입니다.
        title:
          type: string
          example: Ax+Bsin(x)=C
          description: 문제 제목입니다.
        isOriginal:
          type: boolean
          example: true
          description: 원본과 동일한지 여부입니다.
      description: 언어별 문제 제목입니다.
    RivalUser:
      type: object
      required:
        - isRival
        - isReverseRival
      properties:
        isRival:
          type: boolean
          example: false
          description: 라이벌 여부입니다.
        isReverseRival:
          type: boolean
          example: false
          description: 역라이벌 여부입니다.
      allOf:
        - $ref: '#/components/schemas/User'
    SearchProblem.QueryDirection:
      type: string
      enum:
        - asc
        - desc
      description: 검색 결과 정렬 방향
      x-internal: true
    SearchProblem.QuerySort:
      type: string
      enum:
        - id
        - level
        - title
        - solved
        - average_try
        - random
      description: 검색 결과 정렬 기준
      x-internal: true
    SiteStatistics:
      type: object
      required:
        - problemCount
        - problemVotedCount
        - userCount
        - contributorCount
        - contributionCount
      properties:
        problemCount:
          type: integer
          format: uint64
          example: 29799
          description: 여태까지 색인된 백준 문제 수입니다.
        problemVotedCount:
          type: integer
          format: uint64
          example: 22252
          description: 여태까지 난이도가 기여된 백준 문제 수입니다.
        userCount:
          type: integer
          format: uint64
          example: 127880
          description: 여태까지 등록한 사용자 수입니다.
        contributorCount:
          type: integer
          format: uint64
          example: 3657
          description: 여태까지 난이도에 기여한 사용자 수입니다
        contributionCount:
          type: integer
          format: uint64
          example: 409333
          description: 여태까지 이루어진 난이도 기여의 수입니다.
      description: solved.ac 사이트의 통계 정보입니다.
    SocialUser:
      type: object
      required:
        - blocked
        - reverseBlocked
      properties:
        blocked:
          type: boolean
          example: false
          description: 로그인한 사용자가 해당 사용자를 차단했는지 여부입니다.
        reverseBlocked:
          type: boolean
          example: false
          description: 로그인한 사용자가 해당 사용자에게 차단당했는지 여부입니다.
      allOf:
        - $ref: '#/components/schemas/RivalUser'
      description: solved.ac 사용자 정보입니다.
    SolveTier:
      type: number
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
      description: |-
        <solved-icon type="solve-tier:0"></solved-icon> <span class="solve-tier zero">Unrated</span>를 0,
        <solved-icon type="solve-tier:1"></solved-icon> <span class="solve-tier bronze5">Bronze V</span>를 1,
        ...,
        <solved-icon type="solve-tier:30"></solved-icon> <span class="solve-tier ruby1">Ruby I</span>을 30,
        <solved-icon type="solve-tier:31"></solved-icon> <span class="solve-tier master">Master</span>를 31로 표현하는 문제해결 티어입니다.
        자세한 값 정보는 표1. 문제 풀이 레이팅 표를 펼쳐 참고하십시오.

        <details>
        <summary>
        표1. 문제 풀이 레이팅 표
        </summary>

        | 수치 | 이름                                                                                                    |                                         요구 레이팅 |
        | ---: | :------------------------------------------------------------------------------------------------------ | --------------------------------------------------: |
        |    0 |            <solved-icon type="solve-tier:0"></solved-icon> <span class="solve-tier zero">Unrated</span> |         <span class="bold solve-tier zero">0</span> |
        |    1 |        <solved-icon type="solve-tier:1"></solved-icon> <span class="solve-tier bronze5">Bronze V</span> |     <span class="bold solve-tier bronze5">30</span> |
        |    2 |       <solved-icon type="solve-tier:2"></solved-icon> <span class="solve-tier bronze4">Bronze IV</span> |     <span class="bold solve-tier bronze4">60</span> |
        |    3 |      <solved-icon type="solve-tier:3"></solved-icon> <span class="solve-tier bronze3">Bronze III</span> |     <span class="bold solve-tier bronze3">90</span> |
        |    4 |       <solved-icon type="solve-tier:4"></solved-icon> <span class="solve-tier bronze2">Bronze II</span> |    <span class="bold solve-tier bronze2">120</span> |
        |    5 |        <solved-icon type="solve-tier:5"></solved-icon> <span class="solve-tier bronze1">Bronze I</span> |    <span class="bold solve-tier bronze1">150</span> |
        |    6 |        <solved-icon type="solve-tier:6"></solved-icon> <span class="solve-tier silver5">Silver V</span> |    <span class="bold solve-tier silver5">200</span> |
        |    7 |       <solved-icon type="solve-tier:7"></solved-icon> <span class="solve-tier silver4">Silver IV</span> |    <span class="bold solve-tier silver4">300</span> |
        |    8 |      <solved-icon type="solve-tier:8"></solved-icon> <span class="solve-tier silver3">Silver III</span> |    <span class="bold solve-tier silver3">400</span> |
        |    9 |       <solved-icon type="solve-tier:9"></solved-icon> <span class="solve-tier silver2">Silver II</span> |    <span class="bold solve-tier silver2">500</span> |
        |   10 |       <solved-icon type="solve-tier:10"></solved-icon> <span class="solve-tier silver1">Silver I</span> |    <span class="bold solve-tier silver1">650</span> |
        |   11 |           <solved-icon type="solve-tier:11"></solved-icon> <span class="solve-tier gold5">Gold V</span> |      <span class="bold solve-tier gold5">800</span> |
        |   12 |          <solved-icon type="solve-tier:12"></solved-icon> <span class="solve-tier gold4">Gold IV</span> |      <span class="bold solve-tier gold4">950</span> |
        |   13 |         <solved-icon type="solve-tier:13"></solved-icon> <span class="solve-tier gold3">Gold III</span> |     <span class="bold solve-tier gold3">1100</span> |
        |   14 |          <solved-icon type="solve-tier:14"></solved-icon> <span class="solve-tier gold2">Gold II</span> |     <span class="bold solve-tier gold2">1250</span> |
        |   15 |           <solved-icon type="solve-tier:15"></solved-icon> <span class="solve-tier gold1">Gold I</span> |     <span class="bold solve-tier gold1">1400</span> |
        |   16 |   <solved-icon type="solve-tier:16"></solved-icon> <span class="solve-tier platinum5">Platinum V</span> | <span class="bold solve-tier platinum5">1600</span> |
        |   17 |  <solved-icon type="solve-tier:17"></solved-icon> <span class="solve-tier platinum4">Platinum IV</span> | <span class="bold solve-tier platinum4">1750</span> |
        |   18 | <solved-icon type="solve-tier:18"></solved-icon> <span class="solve-tier platinum3">Platinum III</span> | <span class="bold solve-tier platinum3">1900</span> |
        |   19 |  <solved-icon type="solve-tier:19"></solved-icon> <span class="solve-tier platinum2">Platinum II</span> | <span class="bold solve-tier platinum2">2000</span> |
        |   20 |   <solved-icon type="solve-tier:20"></solved-icon> <span class="solve-tier platinum1">Platinum I</span> | <span class="bold solve-tier platinum1">2100</span> |
        |   21 |     <solved-icon type="solve-tier:21"></solved-icon> <span class="solve-tier diamond5">Diamond V</span> |  <span class="bold solve-tier diamond5">2200</span> |
        |   22 |    <solved-icon type="solve-tier:22"></solved-icon> <span class="solve-tier diamond4">Diamond IV</span> |  <span class="bold solve-tier diamond4">2300</span> |
        |   23 |   <solved-icon type="solve-tier:23"></solved-icon> <span class="solve-tier diamond3">Diamond III</span> |  <span class="bold solve-tier diamond3">2400</span> |
        |   24 |    <solved-icon type="solve-tier:24"></solved-icon> <span class="solve-tier diamond2">Diamond II</span> |  <span class="bold solve-tier diamond2">2500</span> |
        |   25 |     <solved-icon type="solve-tier:25"></solved-icon> <span class="solve-tier diamond1">Diamond I</span> |  <span class="bold solve-tier diamond1">2600</span> |
        |   26 |           <solved-icon type="solve-tier:26"></solved-icon> <span class="solve-tier ruby5">Ruby V</span> |     <span class="bold solve-tier ruby5">2700</span> |
        |   27 |          <solved-icon type="solve-tier:27"></solved-icon> <span class="solve-tier ruby4">Ruby IV</span> |     <span class="bold solve-tier ruby4">2800</span> |
        |   28 |         <solved-icon type="solve-tier:28"></solved-icon> <span class="solve-tier ruby3">Ruby III</span> |     <span class="bold solve-tier ruby3">2850</span> |
        |   29 |          <solved-icon type="solve-tier:29"></solved-icon> <span class="solve-tier ruby2">Ruby II</span> |     <span class="bold solve-tier ruby2">2900</span> |
        |   30 |           <solved-icon type="solve-tier:30"></solved-icon> <span class="solve-tier ruby1">Ruby I</span> |     <span class="bold solve-tier ruby1">2950</span> |
        |   31 |          <solved-icon type="solve-tier:31"></solved-icon> <span class="solve-tier master">Master</span> |    <span class="bold solve-tier master">3000</span> |

        </details>
    User:
      type: object
      required:
        - handle
        - bio
        - backgroundId
        - solvedCount
        - voteCount
        - class
        - classDecoration
        - rivalCount
        - reverseRivalCount
        - tier
        - rating
        - ratingByProblemsSum
        - ratingByClass
        - ratingBySolvedCount
        - ratingByVoteCount
        - arenaTier
        - arenaRating
        - arenaMaxTier
        - arenaMaxRating
        - arenaCompetedRoundCount
        - maxStreak
        - coins
        - stardusts
        - joinedAt
        - bannedUntil
        - proUntil
        - rank
      properties:
        handle:
          type: string
          example: shiftpsh
          description: 사용자명입니다.
        bio:
          type: string
          example: 🧡 이곳의 개발자입니다.
          description: 자기소개입니다.
        badgeId:
          type: string
          nullable: true
          example: ghudegy2022-1
          description: 장착 중인 뱃지 ID입니다.
        backgroundId:
          type: string
          example: event240203
          description: 장착 중인 배경 ID입니다.
        profileImageUrl:
          type: string
          format: uri
          nullable: true
          example: https://static.solved.ac/uploads/profile/shiftpsh-picture-1693244003120.png
          description: 프로필 사진으로 가는 하이퍼링크입니다.
        solvedCount:
          type: integer
          format: uint64
          example: 3474
          description: 푼 문제 수입니다.
        voteCount:
          type: integer
          format: uint64
          example: 1528
          description: 난이도 기여 수입니다.
        class:
          type: number
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
          example: 8
          description: |-
            취득한 CLASS입니다.
            취득한 CLASS가 없다면 0으로 표현합니다.
        classDecoration:
          type: string
          enum:
            - none
            - silver
            - gold
          example: none
          description: |-
            CLASS 완성도에 따른 장식입니다.
            <solved-icon type="class:1"></solved-icon> 장식 없음 (`"none"`),
            <solved-icon type="class:1s"></solved-icon> 은장<sup>+</sup> (`"silver"`),
            <solved-icon type="class:1g"></solved-icon> 금장<sup>++</sup> (`"gold"`)이 있습니다.
        rivalCount:
          type: integer
          format: uint64
          example: 57
          description: 라이벌 수입니다.
        reverseRivalCount:
          type: integer
          format: uint64
          example: 139
          description: 역라이벌 수입니다.
        tier:
          allOf:
            - $ref: '#/components/schemas/SolveTier'
          example: 26
        rating:
          type: integer
          format: uint32
          example: 2724
          description: 문제풀이 레이팅입니다
        ratingByProblemsSum:
          type: integer
          format: uint32
          example: 2294
          description: 상위 100 문제 난이도 합으로 얻은 레이팅입니다.
        ratingByClass:
          type: integer
          format: uint32
          example: 230
          description: 취득한 CLASS에 따라 얻은 레이팅입니다.
        ratingBySolvedCount:
          type: integer
          format: uint32
          example: 175
          description: 푼 문제 수로 얻은 레이팅입니다.
        ratingByVoteCount:
          type: integer
          format: uint32
          example: 25
          description: 문제 난이도에 기여한 횟수로 받은 레이팅입니다.
        arenaTier:
          allOf:
            - $ref: '#/components/schemas/ArenaTier'
          example: 0
          description: 현재 아레나 티어입니다.
        arenaRating:
          type: integer
          format: uint32
          example: 0
          description: 현재 아레나 레이팅입니다.
        arenaMaxTier:
          allOf:
            - $ref: '#/components/schemas/ArenaTier'
          example: 0
          description: 역대 받은 아레나 티어 중 최고점일 때의 아레나 티어입니다.
        arenaMaxRating:
          type: integer
          format: uint32
          example: 0
          description: 역대 받은 아레나 레이팅 중 최고점일 때의 아레나 레이팅입니다.
        arenaCompetedRoundCount:
          type: integer
          format: uint64
          example: 0
          description: 참여한 아레나 라운드 수입니다.
        maxStreak:
          type: integer
          format: uint64
          example: 366
          description: 유지한 최대 스트릭의 길이입니다. (일 단위)
        coins:
          type: integer
          format: uint64
          example: 1063
          description: |-
            보유 중인 코인에 100을 곱한 값입니다.
            만약, 실제로 보유한 코인이 0.15라면 15로 기록됩니다.
        stardusts:
          type: integer
          format: uint64
          example: 273583
          description: 보유 중인 별가루 양입니다.
        joinedAt:
          type: string
          format: date-time
          example: 2021-06-19T00:00:00.000Z
          description: |-
            가입 시각입니다.
            일부 계정에 대해 2021년 6월 19일 0시 (UTC)로 백필된 흔적이 있습니다.
        bannedUntil:
          type: string
          format: date-time
          example: 1970-01-01T00:00:00.000Z
          description: |-
            정지 종료 시각입니다.
            정지 이력이 없을 경우 Unix Timestamp 0 값을 포매팅한 문자열입니다.
        proUntil:
          type: string
          format: date-time
          example: 2099-12-31T14:59:59.000Z
          description: |-
            [솔브드 서포터](https://solved.ac/support) 종료 시각입니다.
            활성화 이력이 없을 경우 Unix Timestamp 0 값을 포매팅한 문자열입니다.
        rank:
          type: integer
          format: uint64
          example: 130
          description: |-
            순위입니다.
            이 값은 요청하는 엔드포인트의 정렬 기준에 따라 다를 수 있습니다.
            예) /ranking/* 엔드포인트에서는 해당 랭킹의 순위, /show 엔드포인트에서는 문제풀이 레이팅 순위
      description: solved.ac 사용자 정보입니다.
    VerifyCredentials.Agreements:
      type: object
      required:
        - tos
        - privacy
      properties:
        tos:
          type: string
          example: tos_v1
          description: 동의한 약관 버전입니다.
        privacy:
          type: string
          example: privacy_v2
          description: 동의한 개인정보 처리방침 버전입니다.
      description: 사용자 동의 여부입니다.
    VerifyCredentials.Credential:
      type: object
      required:
        - user
        - aggredOn
        - emoticons
        - bookmarks
        - notificationCount
        - lastSolvedStateChangedAt
      properties:
        user:
          $ref: '#/components/schemas/VerifyCredentials.UserWithSettings'
        aggredOn:
          $ref: '#/components/schemas/VerifyCredentials.Agreements'
        emoticons:
          type: array
          items:
            $ref: '#/components/schemas/VerifyCredentials.EmoticonUnlockStatus'
          example:
            - emoticonId: hanbyeol-01
              emoticonUrl: https://static.solved.ac/emoticons/fool.png
              displayName: 난 바보야
              unlocked: true
            - emoticonId: hanbyeol-02
              emoticonUrl: https://static.solved.ac/emoticons/lgtm.png
              displayName: LGTM
              unlocked: false
            - emoticonId: hanbyeol-03
              emoticonUrl: https://static.solved.ac/emoticons/real.png
              displayName: ㄹㅇㅋㅋ
              unlocked: true
            - emoticonId: hanbyeol-04
              emoticonUrl: https://static.solved.ac/emoticons/why-work.png
              displayName: 이게 왜 됨?
              unlocked: true
            - emoticonId: hanbyeol-05
              emoticonUrl: https://static.solved.ac/emoticons/i-wont-do.png
              displayName: 응, 안 해
              unlocked: true
            - emoticonId: hanbyeol-06
              emoticonUrl: https://static.solved.ac/emoticons/overclock.png
              displayName: 두뇌풀가동!
              unlocked: true
            - emoticonId: hanbyeol-07
              emoticonUrl: https://static.solved.ac/emoticons/hello-world.png
              displayName: Hello, World!
              unlocked: true
            - emoticonId: hanbyeol-08
              emoticonUrl: https://static.solved.ac/emoticons/i-hate-math.png
              displayName: 수학시러!
              unlocked: true
            - emoticonId: hanbyeol-09
              emoticonUrl: https://static.solved.ac/emoticons/am-i-screwed.png
              displayName: 망?했네?
              unlocked: true
            - emoticonId: hanbyeol-10
              emoticonUrl: https://static.solved.ac/emoticons/dont-decieve.png
              displayName: 기만ㄴㄴ
              unlocked: true
            - emoticonId: hanbyeol-11
              emoticonUrl: https://static.solved.ac/emoticons/i-hate-coding.png
              displayName: 코딩시러!
              unlocked: true
            - emoticonId: hanbyeol-12
              emoticonUrl: https://static.solved.ac/emoticons/thinking-face.png
              displayName: 흠터레스팅
              unlocked: true
            - emoticonId: hanbyeol-13
              emoticonUrl: https://static.solved.ac/emoticons/why-dont-work.png
              displayName: 이게 왜 안 됨?
              unlocked: true
            - emoticonId: hanbyeol-14
              emoticonUrl: https://static.solved.ac/emoticons/well-programmed.png
              displayName: 잘짰네ㅎ
              unlocked: true
            - emoticonId: hanbyeol-15
              emoticonUrl: https://static.solved.ac/emoticons/please-dont-explode.png
              displayName: 터지면 안대...
              unlocked: true
            - emoticonId: hanbyeol-16
              emoticonUrl: https://static.solved.ac/emoticons/nooo.png
              displayName: 으에에~
              unlocked: false
          description: 보유할 수 있는 모든 이모티콘에 대해 이모티콘 정보에 덧붙여 보유 여부를 함께 담은 목록입니다.
        bookmarks: {}
        notificationCount:
          type: integer
          format: uint32
          example: 0
          description: 받은 알림 수입니다.
        lastSolvedStateChangedAt:
          type: string
          format: date-time
          example: 2024-03-17T19:24:42.000Z
          description: 마지막으로 솔브드 상태가 변한 시각입니다.
      x-internal: true
    VerifyCredentials.EmoticonUnlockStatus:
      type: object
      required:
        - unlocked
      properties:
        unlocked:
          type: boolean
          example: true
          description: 해금 여부입니다.
      allOf:
        - $ref: '#/components/schemas/Emoticon'
      x-internal: true
    VerifyCredentials.UserSettings:
      type: object
      required:
        - twitterPostOnProblemSolve
        - screenTheme
        - twitterPostHandle
        - twitterPostOnRatingIncrease
        - twitterPostOnTierIncrease
        - twitterPostOnClassIncrease
        - pro_hideAds
        - siteLanguage
        - showIllustBackground
        - showMovieBackground
      properties:
        twitterPostOnProblemSolve:
          type: string
          enum:
            - 'true'
        screenTheme:
          type: string
          enum:
            - default
        twitterPostHandle:
          type: string
          enum:
            - 'true'
        twitterPostOnRatingIncrease:
          type: string
          enum:
            - 'true'
        twitterPostOnTierIncrease:
          type: string
          enum:
            - 'true'
        twitterPostOnClassIncrease:
          type: string
          enum:
            - 'true'
        pro_hideAds:
          type: string
          enum:
            - 'true'
        siteLanguage:
          type: string
          enum:
            - ko
        showIllustBackground:
          type: string
          enum:
            - 'true'
        showMovieBackground:
          type: string
          enum:
            - 'true'
    VerifyCredentials.UserWithSettings:
      type: object
      required:
        - settings
        - email
      properties:
        settings:
          allOf:
            - $ref: '#/components/schemas/VerifyCredentials.UserSettings'
          description: 설정입니다.
        email:
          type: string
          example: me@shiftpsh.com
          description: 사용 중인 이메일 주소입니다.
      allOf:
        - $ref: '#/components/schemas/User'
      x-internal: true
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: cookie
      name: solvedacToken
      description: JWT 규격의 solved.ac 사용자 접근 토큰을 Cookie로 넘깁니다.
servers:
  - url: https://solved.ac/api/v3
    description: ''
    variables: {}
